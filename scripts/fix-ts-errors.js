#!/usr/bin/env node

const fs = require("fs");

// Fix all remaining TypeScript errors
const fixes = [
    // Fix error is of type 'unknown' errors
    {
        file: "src/app/organizations/page.tsx",
        search: 'console.error("Error deleting organization:", error);',
        replace:
            'console.error("Error deleting organization:", error);\n        const errorMessage = error instanceof Error ? error.message : "Failed to delete organization";',
    },
    {
        file: "src/app/organizations/page.tsx",
        search: 'return NextResponse.json(\n            { error: error.message || "Failed to delete organization" },\n            { status: 500 }\n        );',
        replace:
            "return NextResponse.json(\n            { error: errorMessage },\n            { status: 500 }\n        );",
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'console.error("Error adding comment:", error);',
        replace:
            'console.error("Error adding comment:", error);\n            const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ th√™m b√¨nh lu·∫≠n";',
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ th√™m b√¨nh lu·∫≠n",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'console.error("Error editing comment:", error);',
        replace:
            'console.error("Error editing comment:", error);\n            const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ s·ª≠a b√¨nh lu·∫≠n";',
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ s·ª≠a b√¨nh lu·∫≠n",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'console.error("Error deleting comment:", error);',
        replace:
            'console.error("Error deleting comment:", error);\n            const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a b√¨nh lu·∫≠n";',
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a b√¨nh lu·∫≠n",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'console.error("Error saving ticket:", error);',
        replace:
            'console.error("Error saving ticket:", error);\n            const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ticket";',
    },
    {
        file: "src/app/tickets/[id]/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ticket",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/tickets/page.tsx",
        search: 'console.error("Error saving ticket:", error);',
        replace:
            'console.error("Error saving ticket:", error);\n        const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ticket";',
    },
    {
        file: "src/app/tickets/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ticket",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/tickets/page.tsx",
        search: 'console.error("Error deleting ticket:", error);',
        replace:
            'console.error("Error deleting ticket:", error);\n        const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ticket";',
    },
    {
        file: "src/app/tickets/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ticket",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/users/page.tsx",
        search: 'console.error("Error saving user:", error);',
        replace:
            'console.error("Error saving user:", error);\n        const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ng∆∞·ªùi d√πng";',
    },
    {
        file: "src/app/users/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ng∆∞·ªùi d√πng",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/users/page.tsx",
        search: 'console.error("Error deleting user:", error);',
        replace:
            'console.error("Error deleting user:", error);\n        const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ng∆∞·ªùi d√πng";',
    },
    {
        file: "src/app/users/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ng∆∞·ªùi d√πng",',
        replace: "description: errorMessage,",
    },
    {
        file: "src/app/users/page.tsx",
        search: 'console.error("Error resetting password:", error);',
        replace:
            'console.error("Error resetting password:", error);\n        const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ reset m·∫≠t kh·∫©u";',
    },
    {
        file: "src/app/users/page.tsx",
        search: 'description: error instanceof Error ? error.message : "Kh√¥ng th·ªÉ reset m·∫≠t kh·∫©u",',
        replace: "description: errorMessage,",
    },
    // Fix variable redeclaration errors
    {
        file: "src/app/users/page.tsx",
        search: 'const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ng∆∞·ªùi d√πng";',
        replace:
            'const saveErrorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ l∆∞u ng∆∞·ªùi d√πng";',
    },
    {
        file: "src/app/users/page.tsx",
        search: "description: errorMessage,",
        replace: "description: saveErrorMessage,",
    },
    {
        file: "src/app/users/page.tsx",
        search: 'const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ng∆∞·ªùi d√πng";',
        replace:
            'const deleteErrorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ x√≥a ng∆∞·ªùi d√πng";',
    },
    {
        file: "src/app/users/page.tsx",
        search: "description: errorMessage,",
        replace: "description: deleteErrorMessage,",
    },
    {
        file: "src/app/users/page.tsx",
        search: 'const errorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ reset m·∫≠t kh·∫©u";',
        replace:
            'const resetErrorMessage = error instanceof Error ? error.message : "Kh√¥ng th·ªÉ reset m·∫≠t kh·∫©u";',
    },
    {
        file: "src/app/users/page.tsx",
        search: "description: errorMessage,",
        replace: "description: resetErrorMessage,",
    },
];

console.log("üîß ƒêang fix t·∫•t c·∫£ l·ªói TypeScript...");

fixes.forEach(({ file, search, replace }) => {
    if (fs.existsSync(file)) {
        let content = fs.readFileSync(file, "utf8");
        content = content.replace(search, replace);
        fs.writeFileSync(file, content);
        console.log(`‚úÖ Fixed: ${file}`);
    } else {
        console.log(`‚ùå File not found: ${file}`);
    }
});

console.log("üéØ Ho√†n t·∫•t fix l·ªói TypeScript!");
